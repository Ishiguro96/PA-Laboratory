% -------------------------------- %
% -      PA LABORATORIUM 5       - %
% - METODA LINII PIERWIASTKOWYCH - %
% -                              - %
% - AUTOR: Dawid Tobor           - %
% -------------------------------- %

clear all;
close all;
clc;

% Pobranie informacji o sterowanym obiekcie
run('ModelData.m');

% Tworzenie transmitancji obiektu sterowanego K(s)
s = tf('s');
K = k/((1+s*T1)*(1+s*T2)*(1+s*T3));

kr_gwiazdka = 1;

% Transmitancja regulatora typu P
Kr = kr_gwiazdka;

% Transmitancja układu otwartego
K0 = Kr * K;
% Transmitancja układu zamkniętego (w --> y)
G = K0/(1+K0);

[p,z] = pzmap(G); %Stopień stabilności i oscylacyjności

% Wybor sposobu obliczenia kr_gwiazdka
% EDIT HERE %
wybor = 1; % 1 -> theta, 2 -> eta %
eta_porzadane = 0.02;
theta_porzadane = 4;
% END EDIT %

eta = min(abs(real(p)));
theta = max((abs( imag(p) ./ real(p) )));

if(wybor == 1)
    disp("Obliczam thete...");
    for i = 1:7
        [kr_gwiazdka, theta] = Funkcja_obliczania_thety(K, kr_gwiazdka, theta, theta_porzadane, 1 * 10^(-i+1));
    end
elseif(wybor == 2)
    disp("Obliczam ete...");
    for i = 1:7
        [kr_gwiazdka, eta] = Funkcja_obliczania_ety(K, kr_gwiazdka, eta, eta_porzadane, 1 * 10^(-i+1));
    end
end

% Transmitancja regulatora typu P
Kr = kr_gwiazdka;

% Transmitancja układu otwartego
K0 = Kr * K;

G = K0/(1+K0); %Transmitancja układu zamkniętego (w --> y)
Ge = 1/(1+K0); %Transmitancja uchybowa (w --> e)
Gw = Kr/(1+K0); %Transmitancja sygnału sterującego (w --> u)

[p,~] = pzmap(G); %Stopień stabilności i oscylacyjności
theta = max((abs( imag(p) ./ real(p) )));
eta = min(abs(real(p)));

figure;
rlocus(K0);
[DA, DF, ~, ~] = margin(K0);

figure;
h = nyquistplot(K0);
setoptions(h, 'MagUnits', 'abs', 'ShowFullContour', 'off');

figure;
step(G, Ge, Gw, 0:0.01:200);

fprintf("----- PUNKT 1 -----\n");
fprintf("Theta: %0.3f, Eta: %0.3f, Zapas amplitudy: %0.3f, Zapas fazy: %0.3f\n",theta, eta, DA, DF);




% PUNKT B

% EDIT HERE
beta = 0.00001;
Ta = 10.998;
% END EDIT

kr_gwiazdka = 1;
Tb = beta * T3; %Bo T3 to polowa najmniejszej stalej, wiec jest najmniejsza

% Transmitancja regulatora PD
Kr = minreal(kr_gwiazdka * (1 + s*Ta) / (1 + s*Tb));

% Transmitancja układu otwartego
K0 = minreal(Kr * K);

if(wybor == 1)
    disp("Obliczam thete...");
    for i = 1:7
        [kr_gwiazdka, theta] = Funkcja_obliczania_thety(K, kr_gwiazdka, theta, theta_porzadane, 1 * 10^(-i+1));
    end
elseif(wybor == 2)
    disp("Obliczam ete...");
    for i = 1:7
        [kr_gwiazdka, eta] = Funkcja_obliczania_ety(K, kr_gwiazdka, eta, eta_porzadane, 1 * 10^(-i+1));
    end
end

% Transmitancja regulatora typu PD
Kr = kr_gwiazdka * (1 + s*Ta) / (1 + s*Tb)

% Transmitancja układu otwartego
K0 = Kr * K

G = K0/(1+K0); %Transmitancja układu zamkniętego (w --> y)
Ge = 1/(1+K0); %Transmitancja uchybowa (w --> e)
Gw = Kr/(1+K0); %Transmitancja sygnału sterującego (w --> u)

[p,z] = pzmap(G); %Stopień stabilności i oscylacyjności
theta = max((abs( imag(p) ./ real(p) )));
eta = min(abs(real(p)));

figure;
rlocus(K0);
[DA, DF, DA_omega, DF_omega] = margin(K0);

figure;
h = nyquistplot(K0);
setoptions(h, 'MagUnits', 'abs', 'ShowFullContour', 'off');

figure;
step(G, Ge, Gw, 0:0.01:200);

fprintf("----- PUNKT 2 -----\n");
fprintf("Theta: %0.3f, Eta: %0.3f, Zapas amplitudy: %0.3f, Zapas fazy: %0.3f\n",theta, eta, DA, DF);

